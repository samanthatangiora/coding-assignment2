import processing.pdf.*;
int[][] startingPositions;
int squareWidth;
Table IDList;
int IDIndex;
int red;
int hue;
int sat = 40;
int bright = 100;

PGraphicsPDF pdf;

void setup(){
  pdf = (PGraphicsPDF)beginRecord(PDF, "all.pdf");
  colorMode(HSB, 360, 100, 100);  
  IDList = loadTable("StudentNumbers.csv", "header"); 
  background(0, 0, 100);      
  size(640,530);
  
  
  // Array of starting positions:         
  startingPositions = new int[][]{{170, 40}, {320, 40}, {20,190}, {170,190}, {320,190}, {470,190}, {170,340}, {320,340}};
  squareWidth = 150;
  
  IDIndex = 0;
  frameRate(.5);
}

void draw(){
  background(0, 0, 100);
  
  if (IDIndex > IDList.getRowCount()-1){
    IDIndex = 0;   
  }
  
  //pull IDNumber from table using IDIndex
  String IDNumber = IDList.getString(IDIndex, "ID number");
  println(IDNumber);
     
  //colour 
  int subStringRed = int(IDNumber.substring(5)); 
  hue = int (map(subStringRed, 0, 999, 0, 360));
    
  // loop through ID numbers then; find out what number we're at & position it's in
  for(int position = 0; position < IDNumber.length(); position++){
   drawNumber(IDNumber.charAt(position), position);
  }
  
  
  pdf.nextPage();
  IDIndex++;  
}

void mousePressed() {
  endRecord();
  exit();
}

void drawNumber(char number, int position){
  
 int x = startingPositions[position][0];
 int y = startingPositions[position][1];

 switch(number){
   case '1':
     drawOne(x,y);
     break;
   case '2':
     drawTwo(x,y);
     break;
   case '3':
     drawThree(x,y);
     break;
    case '4':
     drawFour(x,y);
     break;
   case '5':
     drawFive(x,y);
     break;
   case '6':
     drawSix(x,y);
     break;
   case '7':
     drawSeven(x,y);
     break;
   case '8':
     drawEight(x,y);
     break;
   case '9':
     drawNine(x,y);
     break;
   case '0':
     drawZero(x,y);
     break;   
 }
}

void drawOne(int x, int y){
  fill(0);
  strokeWeight(4);
  stroke(0);
  triangle(x,y,x+squareWidth,y,x,y+squareWidth);
}

void drawTwo(int x, int y){
  drawOne(x,y);
  
  fill(hue, sat, bright);
  strokeWeight(4);
  stroke(0);
  triangle(x+squareWidth,y, x+squareWidth, y+squareWidth, x, y+squareWidth);
}

void drawThree(int x, int y){
  strokeWeight(4);
  stroke(0); 
  fill(hue, sat, bright); 
  triangle(x+squareWidth,y, x+squareWidth, y+squareWidth, x, y+squareWidth);
  
  noFill();
  strokeWeight(4);
  stroke(0);
  triangle(x, y, x, y+squareWidth, x+squareWidth, y+squareWidth);  
}

void drawFour(int x, int y){
  fill(hue, sat, bright);
  strokeWeight(4);
  stroke(0);
  rect(x, y, squareWidth, squareWidth);
}

void drawFive(int x, int y){  
  strokeWeight(4);
  stroke(255); 
  fill(0); 
  triangle(x, y+squareWidth, x+squareWidth, y+squareWidth, x+squareWidth, y);  
  
  strokeWeight(4);
  stroke(255); 
  fill(0); 
  triangle(x, y, x+squareWidth, y, x+squareWidth, y+squareWidth); 
}

void drawSix(int x, int y){  
  strokeWeight(4);
  stroke(hue, sat, bright); 
  noFill();
  triangle(x, y, x+squareWidth, y, x+squareWidth, y+squareWidth);  
  
  strokeWeight(4);
  stroke(hue, sat, bright); 
  fill(0); 
  triangle(x, y, x+squareWidth, y, x, y+squareWidth); 
}

void drawSeven(int x, int y){  
  fill(0);
  triangle(x, y, x+squareWidth, y, x+squareWidth, y+squareWidth);  
  
  strokeWeight(4);
  stroke(hue, sat, bright); 
  noFill(); 
  triangle(x, y, x, y+squareWidth, x+squareWidth, y+squareWidth); 
}

void drawEight(int x, int y){  
  strokeWeight(4);
  stroke(0);
  noFill();
  rect(x, y, squareWidth, squareWidth);
  
  strokeWeight(4);
  stroke(0);
  line(x, y, x+squareWidth, y+squareWidth);
  strokeWeight(4);
  stroke(0);
  line(x+squareWidth, y, x, y+squareWidth); 
}

void drawNine(int x, int y){  
  strokeWeight(4);
  stroke(0);
  noFill();
  triangle(x+squareWidth,y, x+squareWidth, y+squareWidth, x, y+squareWidth);
}

void drawZero(int x, int y){  
  strokeWeight(4);
  stroke(red, 26, 100);
  line(x, y, x+squareWidth, y+squareWidth);
  strokeWeight(4);
  stroke(red, 26, 100);
  line(x+squareWidth, y, x, y+squareWidth); 
}
